{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/Input/add-text/add-text.component.ts","./src/app/components/Input/add-text/add-text.component.html","./src/app/components/Input/experience-obj/experience-obj.component.ts","./src/app/components/Input/experience-obj/experience-obj.component.html","./src/app/components/Input/multi-line-to-json/multi-line-to-json.component.ts","./src/app/components/Input/multi-line-to-json/multi-line-to-json.component.html","./src/app/components/Project/flip-game/flip-game.component.ts","./src/app/components/Project/flip-game/flip-game.component.html","./src/app/components/add-todo/add-todo.component.ts","./src/app/components/add-todo/add-todo.component.html","./src/app/components/display/exp-obj-display/exp-obj-display.component.ts","./src/app/components/display/exp-obj-display/exp-obj-display.component.html","./src/app/components/display/images-grid-display/images-grid-display.component.ts","./src/app/components/display/images-grid-display/images-grid-display.component.html","./src/app/components/display/list-display/list-display.component.ts","./src/app/components/display/list-display/list-display.component.html","./src/app/components/input-area/input-area.component.ts","./src/app/components/input-area/input-area.component.html","./src/app/components/intro/intro.component.ts","./src/app/components/intro/intro.component.html","./src/app/components/layout/header/header.component.ts","./src/app/components/layout/header/header.component.html","./src/app/components/nav-control/nav-control.component.ts","./src/app/components/nav-control/nav-control.component.html","./src/app/components/projects/projects.component.ts","./src/app/components/projects/projects.component.html","./src/app/components/resume-intro/resume-intro.component.ts","./src/app/components/resume-intro/resume-intro.component.html","./src/app/components/resume/resume.component.ts","./src/app/components/resume/resume.component.html","./src/app/components/text-to-json/text-to-json.component.ts","./src/app/components/text-to-json/text-to-json.component.html","./src/app/components/todos/todo-item/todo-item.component.ts","./src/app/components/todos/todo-item/todo-item.component.html","./src/app/components/todos/todos.component.ts","./src/app/components/todos/todos.component.html","./src/app/library/download-tool.service.ts","./src/app/models/Todo.ts","./src/app/models/exp-obj/exp-obj.module.ts","./src/app/services/Data/resume-data.service.ts","./src/app/services/json-loader.service.ts","./src/app/services/projects-data.service.ts","./src/app/services/todo.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACgB;AACM;;;AAG7E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAe,EAAE;IACxC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE;CACnD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,yEACE;QAAA,qEACE;QAAA,oFACF;QAAA,4DAAK;QACL,sGACF;QAAA,4DAAM;QAEN,sEACE;QAAA,6EAAmC;QACnC,2EAA+B;QACjC,4DAAM;QAEN,2EAA+B;;6FDNlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AAEA;AACT;AACqB;AACA;AACiB;AACP;AACF;AACL;AACc;AACH;AACK;AACL;AAC4B;AACV;AACI;AAChB;AACQ;AACnB;AACU;AAC6B;;AAsC7G,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAXJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;SACjB;mIASU,SAAS,mBAlClB,2DAAY;QACZ,gFAAc;QACd,gFAAc;QACd,iGAAiB;QACjB,0FAAe;QACf,yFAAgB;QAChB,oFAAe;QACf,kGAAmB;QACnB,+FAAkB;QAClB,oGAAmB;QACnB,+FAAgB;QAChB,2HAAwB;QACxB,iHAAsB;QACtB,qHAAsB;QACtB,qGAAoB;QACpB,6GAAoB;QACpB,0FAAiB;QACjB,oGAAiB;QACjB,iIAA0B,aAG1B,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;6FAUP,SAAS;cApCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,gFAAc;oBACd,gFAAc;oBACd,iGAAiB;oBACjB,0FAAe;oBACf,yFAAgB;oBAChB,oFAAe;oBACf,kGAAmB;oBACnB,+FAAkB;oBAClB,oGAAmB;oBACnB,+FAAgB;oBAChB,2HAAwB;oBACxB,iHAAsB;oBACtB,qHAAsB;oBACtB,qGAAoB;oBACpB,6GAAoB;oBACpB,0FAAiB;oBACjB,oGAAiB;oBACjB,iIAA0B;iBAC3B;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;iBACjB;gBACD,eAAe,EAAE;oBACf,gFAAc;oBACd,iHAAsB;oBACtB,oGAAmB;oBACnB,oGAAiB;iBAAC;gBACpB,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAA+E;;;AAOxE,MAAM,gBAAgB;IAO3B;QANU,gBAAW,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAC3C,oBAAe,GAAW,QAAQ,CAAC;QACpC,YAAO,GAAW,QAAQ,CAAC;IAI7B,CAAC;IAEjB,QAAQ;IACR,CAAC;IACD,QAAQ;QACN,wEAAwE;QACxE,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;IACH,CAAC;;gFAjBU,gBAAgB;gGAAhB,gBAAgB;QCP7B,0EACI;QADoB,4IAAY,cAAU,IAAC;QAC3C,2EACA;QADiC,oLAAoB;QAArD,4DACA;QAAA,sEACJ;QAAA,4DAAO;;QAFmD,0DAAiC;QAAjC,uGAAiC;QAAtD,+EAAoB;QAChC,0DAAmB;QAAnB,yFAAmB;;6FDK/B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAEE,oDAAM;;kBACN,mDAAK;mBAAC,UAAU;;kBAChB,mDAAK;mBAAC,SAAS;;;;;;;;;;;;;;AEVlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACiC;AAClB;AACP;;;;;;;;AAQ9D,MAAM,sBAAsB;IAIjC,YAAoB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;QADrD,WAAM,GAAiB,IAAI,kFAAY,EAAE,CAAC;IACe,CAAC;IAE1D,QAAQ;IACR,CAAC;IAED,mDAAmD;IACnD,SAAS,CAAC,OAAY;QACpB,IAAI,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,cAAc;QACxC,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;;4FAdU,sBAAsB;sGAAtB,sBAAsB;;;;;;QCXnC,yEACI;QACA,2EAA0D;QAE1D,yEACI;QAAA,wEAAO;QAAA,gEAAK;QAAA,4DAAQ;QACpB,2EACJ;QADuB,gMAA0B;QAA7C,4DACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,wEAAO;QAAA,+DAAI;QAAA,4DAAQ;QACnB,2EACJ;QADuB,+LAAyB;QAA5C,4DACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,4EACJ;QADuB,+LAAwB;QAA3C,4DACJ;QAAA,4DAAM;QAEN,2FAAoF;QAEpF,4EAAiF;QAEjF,mFAA+G;QAAjG,uKAAe,qBAAiB,IAAC;QAAiD,4DAAe;QACnH,4DAAM;;QAlBqB,0DAA0B;QAA1B,qFAA0B;QAK1B,0DAAyB;QAAzB,oFAAyB;QAKzB,0DAAwB;QAAxB,mFAAwB;;6FDLtC,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;kBAEE,uDAAS;mBAAC,WAAW;;;;;;;;;;;;;;AEZxB;AAAA;AAAA;AAAA;AAA+E;;;AAOxE,MAAM,wBAAwB;IAMnC;QALU,eAAU,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAEpD,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAC;IAEf,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;YACpD,OAAO;SACR;QACD,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,WAAW,CAAC;IACrB,CAAC;;gGAlBU,wBAAwB;wGAAxB,wBAAwB;QCPrC,sEACI;QAAA,wEAAO;QAAA,uDAAS;QAAA,4DAAQ;QACxB,8EAA+E;QAAjC,gMAAqB;QAAC,4DAAW;QACnF,4DAAM;;QAFK,0DAAS;QAAT,0EAAS;QACN,0DAAoB;QAApB,sEAAoB;QAAgB,gFAAqB;;6FDK1D,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;kBAEE,oDAAM;;kBAEN,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEZR;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;ICIjD,yEACI;IAAA,6EACS;IADoB,2VAA0B;IACvD,4DAAS;IACb,4DAAM;;;IAFM,0DAAoB;IAApB,yFAAoB;;;IAwB5B,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;;IADG,0DAAuB;IAAvB,+EAAuB;IAAC,kKAAyB;;ADrBnE,MAAM,iBAAiB;IAsD5B;QApDA,kBAAa,GAAoB;YAC/B;gBACE,GAAG,EAAE,iBAAiB;gBACtB,GAAG,EAAE,EAAE;gBACP,EAAE,EAAE,CAAC;aACN;YACD;gBACE,GAAG,EAAE,eAAe;gBACpB,GAAG,EAAE,EAAE;gBACP,EAAE,EAAE,CAAC;aACN;YACD;gBACE,GAAG,EAAE,kBAAkB;gBACvB,GAAG,EAAE,EAAE;gBACP,EAAE,EAAE,CAAC;aACN;YACD;gBACE,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,EAAE;gBACP,EAAE,EAAE,CAAC;aACN;SACF,CAAC;QACF,iBAAiB;QACjB,eAAU,GAAoB,EAAE,CAAC;QACjC,kBAAkB;QAClB,aAAQ,GAAoB,EAAE,CAAC;QAC/B,uCAAuC;QACvC,cAAS,GAAa,EAAE,CAAC;QACzB,sCAAsC;QACtC,gBAAW,GAAoB,EAAE,CAAC;QAElC,YAAY;QACZ,YAAO,GAAoB,EAAE,CAAC;QAC9B,UAAK,GAAoB,EAAE,CAAC;QAC5B,aAAQ,GAAoB,EAAE,CAAC;QAC/B,cAAS,GAAoB,EAAE,CAAC;QAEhC,oBAAoB;QACpB,iBAAY,GAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAElC,aAAQ,GAAW,CAAC,CAAC;QACb,aAAQ,GAAW,EAAE,CAAC;QACtB,eAAU,GAAW,EAAE,CAAC;QAExB,eAAU,GAAW,UAAU,CAAC;QAChC,eAAU,GAAW,qBAAqB,CAAC;QAEnD,cAAS,GAAW,aAAa,CAAC;QAClC,gBAAW,GAAW,GAAG,CAAC;QAElB,WAAM,GAAY,KAAK,CAAC;QAChC,SAAI,GAAW,CAAC,CAAC;IACD,CAAC;IAEjB,QAAQ;QACN,sCAAsC;QACtC,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,QAAQ,GAAG,GAAG,GAAG,SAAS,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;YAC3E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,QAAQ,GAAG,GAAG,GAAG,OAAO,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;YACvE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,QAAQ,GAAG,GAAG,GAAG,UAAU,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;SAC9E;QACD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEjB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,4DAA4D;IAC5D,QAAQ,CAAC,EAAU;QACjB,QAAQ,EAAE,EAAE;YACV,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7B,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9B,MAAM;SACT;IACH,CAAC;IACD,kCAAkC;IAC1B,QAAQ,CAAC,IAAqB;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IACD,4BAA4B;IAC5B,UAAU,CAAC,GAAkB;QAC3B,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE;YACnB,OAAO,GAAG,CAAC,GAAG,CAAC;SAChB;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,6BAA6B;IAC7B,MAAM,CAAC,GAAkB;QACvB,OAAO,GAAG,CAAC,GAAG,CAAC;IACjB,CAAC;IACD,kBAAkB;IAClB,QAAQ,CAAC,KAAU;QAEjB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1B,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;QAC1C,IAAI,SAAS,GAAG,EAAE,EAAE;YAClB,SAAS,GAAG,EAAE,CAAC;SAChB;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACrD,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAE7C;QACD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,4BAA4B;IAC5B,UAAU,CAAC,IAAS;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7D,CAAC;IACD,+CAA+C;IAC/C,aAAa,CAAC,IAAa;QACzB,IAAI,IAAI,EAAE;YACR,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;gBAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;aACI;YACH,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC;gBACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,wBAAwB;IACxB,UAAU;QACR,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACnD,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;QACpF,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;QACpF,iCAAiC;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;SACtE;IACH,CAAC;IACD,4EAA4E;IAC5E,QAAQ,CAAC,GAAkB;QACzB,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;YAC1C,OAAO;SACR;QACD,MAAM,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC;QACrB,8CAA8C;QAC9C,IAAI,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;YACpE,OAAO;SACR;QACD,mCAAmC;QACnC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAClC,OAAO;SACR;QACD,wBAAwB;QACxB,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;QACtC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;QAEtC,4CAA4C;QAC5C,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;SAC9B;aACI,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACnC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YAC5D,UAAU,CAAC,GAAG,EAAE;gBACd,mBAAmB;gBACnB,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE;oBACrF,sBAAsB;oBACtB,IAAI,CAAC,IAAI,EAAE,CAAC;oBACZ,yBAAyB;oBACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAC5D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAC5D,4BAA4B;oBAC5B,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;wBAC9C,IAAI,CAAC,KAAK,EAAE,CAAC;qBACd;iBACF;qBACI;oBACH,uBAAuB;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;oBAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;oBAC1D,uBAAuB;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;oBAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;iBAC3D;gBACD,uBAAuB;gBACvB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,CAAC,EAAE,GAAG,CAAC,CAAC;SACT;IACH,CAAC;IACD,sBAAsB;IACtB,KAAK;QACH,IAAI,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;IAC/B,CAAC;IACD,gBAAgB;IAChB,YAAY;QAEV,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,OAAO;SACR;QACD,sCAAsC;QACtC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACpB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;YAE/B,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;YAC/C,OAAO;SACR;QACD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAE9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,CAAC;IACD,iCAAiC;IACjC,SAAS;QACP,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,0CAA0C;IAC1C,kBAAkB;QAChB,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1B,OAAO,QAAQ,GAAG,KAAK,EAAE;YAEvB,KAAK,GAAG,CAAC,CAAC;YACV,MAAM,GAAG,CAAC,CAAC;YACX,OAAO,KAAK,GAAG,CAAC,EAAE;gBAChB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC;gBAC3C,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,EAAE;oBAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;oBACrD,KAAK,EAAE,CAAC;oBACR,QAAQ,EAAE,CAAC;oBACX,IAAI,KAAK,IAAI,CAAC,EAAE;wBACd,MAAM;qBACP;iBACF;gBACD,IAAI,QAAQ,IAAI,KAAK,EAAE;oBACrB,MAAM;iBACP;aACF;YACD,QAAQ,EAAE,CAAC;YACX,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACtC,QAAQ,GAAG,CAAC,CAAC;aACd;YACD,IAAI,QAAQ,IAAI,KAAK,EAAE;gBACrB,MAAM;aACP;SACF;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5B,CAAC;IACD,+BAA+B;IAC/B,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IACD,mDAAmD;IACnD,YAAY,CAAC,IAAa;QAExB,IAAI,IAAI,EAAE;YACR,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;SACnE;aAAM;YACL,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAClE;IACH,CAAC;;kFAzRU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEACI;QAAA,gEACA;QAAA,yEACI;QAAA,yEACI;QAAA,6GACI;QAGJ,yEACI;QAAA,oEAAI;QAAA,oEAAQ;QAAA,4DAAI;QAChB,gEACA;QAAA,2EAEJ;QADQ,gJAAU,oBAAgB,IAAC;QAD/B,4DAEJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACA;QAAA,6EAA4D;QAA/B,0IAAS,kBAAc,KAAK,CAAC,IAAC;QAAC,6DAAC;QAAA,4DAAS;QACtE,4EAAwB;QAAA,wDAAY;QAAA,4DAAQ;QAC5C,6EAA2D;QAA9B,0IAAS,kBAAc,IAAI,CAAC,IAAC;QAAC,6DAAC;QAAA,4DAAS;QACzE,4DAAM;QACN,uEAAK;QAAA,wDAAe;QAAA,4DAAM;QAC1B,6EAAmD;QAAzB,0IAAS,kBAAc,IAAC;QAAC,wDAAa;QAAA,4DAAS;QAC7E,4DAAM;QACN,iEACA;QAAA,2EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,2EACI;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QAEN,uEACI;QAAA,2EACI;QAAA,uEACI;QAAA,+FAC0B;QADD,2KAAc,oBAAgB,IAAC;QACxD,4DAA0B;QAC9B,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEACJ;QAAA,4DAAM;;QAzCW,0DAAiC;QAAjC,sFAAiC;QAcd,2DAAY;QAAZ,6EAAY;QAGnC,0DAAe;QAAf,gFAAe;QAC+B,0DAAa;QAAb,8EAAa;QAOnD,0DAA8B;QAA9B,mFAA8B;QAS0B,0DAA0B;QAA1B,uFAA0B;;6FD7B1F,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAA+E;;;AAOxE,MAAM,gBAAgB;IAK3B;QAJU,YAAO,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAEvC,oBAAe,GAAW,QAAQ,CAAC;QACpC,YAAO,GAAW,QAAQ,CAAC;IAC7B,CAAC;IAEjB,QAAQ;IAER,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,MAAM,IAAI,GAAG;gBACX,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,SAAS,EAAE,KAAK;aACjB;YACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;;gFAnBU,gBAAgB;gGAAhB,gBAAgB;QCP7B,0EACI;QADe,4IAAY,cAAU,IAAC;QACtC,2EACA;QADgC,mLAAmB;QAAnD,4DACA;QAAA,sEACJ;QAAA,4DAAO;;QAFiD,0DAAiC;QAAjC,uGAAiC;QAArD,8EAAmB;QAC9B,0DAAmB;QAAnB,yFAAmB;;6FDK/B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAEE,oDAAM;;kBAEN,mDAAK;mBAAC,UAAU;;kBAChB,mDAAK;mBAAC,SAAS;;;;;;;;;;;;;;AEXlB;AAAA;AAAA;AAAA;AAAA;AAAyD;AACY;;;;ICGjE,uEAA+C;IAAA,uDAAU;IAAA,4DAAI;;;IAAd,0DAAU;IAAV,oFAAU;;ADItD,MAAM,sBAAsB;IAOjC;QALS,WAAM,GAAiB,IAAI,kFAAY,EAAE,CAAC;QAInD,YAAO,GAAW,aAAa,CAAC;IAChB,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;IACrC,CAAC;;4FAXU,sBAAsB;sGAAtB,sBAAsB;QCRnC,yEACI;QAAA,qEAAK;QAAA,uDAAgB;QAAA,4DAAK;QAC1B,uEAA4C;QAAA,oEAA0D;QAAtG,4DAA4C;QAE5C,8GAA+C;QACnD,4DAAM;;QAJG,0DAAgB;QAAhB,2FAAgB;QAClB,0DAAsB;QAAtB,yJAAsB;QAAwB,0DAAgC;QAAhC,qKAAgC;QAE9E,0DAA0B;QAA1B,4EAA0B;;6FDIpB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;kBAGE,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAA;AAAA;AAA0F;;;;;;ICElF,sEACI;IAAA,uEACI;IADD,4VAAuB;IACtB,oEACJ;IAAA,4DAAI;IACR,4DAAM;;;;IAFO,0DAAuB;IAAvB,+EAAuB;IAAC,kKAAyB;;ADK/D,MAAM,0BAA0B;IAoBrC;QAnBU,eAAU,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAE7D,cAAS,GAAuB,EAAE,CAAC;QACnC,eAAU,GAAW,EAAE,CAAC;QAGf,kBAAa,GAAoB;YACxC;gBACE,GAAG,EAAE,iBAAiB;gBACtB,GAAG,EAAE,EAAE;gBACP,EAAE,EAAE,CAAC;aACN;YACD;gBACE,GAAG,EAAE,iBAAiB;gBACtB,GAAG,EAAE,EAAE;gBACP,EAAE,EAAE,CAAC;aACN;SACF,CAAC;IAEc,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,uCAAuC;IACvC,aAAa,CAAC,IAAa;QACzB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7B,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAED,sCAAsC;IACtC,eAAe,CAAC,KAAa;QAC3B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;IAC9C,CAAC;IACD,gDAAgD;IAChD,aAAa,CAAC,GAAqB,EAAE,IAAa;QAChD,IAAI,IAAI,EAAE;YACR,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;SAC7B;aACI;YACH,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SAC5B;IACH,CAAC;IAED,+CAA+C;IAC/C,QAAQ,CAAC,KAAa,EAAE,GAAW;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;IAClC,CAAC;IAED,QAAQ,CAAC,GAAkB;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,UAAU,CAAC,GAAkB;QAC3B,OAAO,GAAG,CAAC,GAAG,CAAC;IACjB,CAAC;IACD,MAAM,CAAC,GAAkB;QACvB,OAAO,GAAG,CAAC,GAAG,CAAC;IACjB,CAAC;;oGA5DU,0BAA0B;0GAA1B,0BAA0B;;;;;;QCTvC,yEACI;QAAA,yEACI;QAAA,sHACI;QAIR,4DAAM;QACV,4DAAM;;QANO,0DAAiC;QAAjC,sFAAiC;;6FDOjC,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;kBAEE,oDAAM;;kBAIN,uDAAS;mBAAC,cAAc;;kBAExB,mDAAK;;;;;;;;;;;;;;AEhBR;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEqB;;;;;ICOlE,qEACI;IAAA,mEAA2B;IAC/B,4DAAK;;;IADG,0DAAgB;IAAhB,4IAAgB;;;IAH5B,yEACI;IAAA,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,oHACI;IAER,4DAAM;;;IAJE,0DAAc;IAAd,uFAAc;IACd,0DAA6B;IAA7B,gFAA6B;;ADAtC,MAAM,oBAAoB;IAI/B,YAAoB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;QAFxC,UAAK,GAAW,OAAO,CAAC;IAEoB,CAAC;IACtD,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC;;wFAPU,oBAAoB;oGAApB,oBAAoB;QCTjC,yEACI;QAAA,wEACI;QAAA,uDACJ;QAAA,4DAAK;QACL,mEACA;QAAA,oEAAyB;QACzB,yEACI;QAAA,gHACI;QAKR,4DAAM;QACV,4DAAM;;QAZE,0DACJ;QADI,qFACJ;QAIS,0DAA0B;QAA1B,+EAA0B;;6FDE1B,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;kBAGE,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAA+E;;AAOxE,MAAM,kBAAkB;IAI7B;QAHU,iBAAY,GAAsB,IAAI,0DAAY,EAAE,CAAC;QACtD,SAAI,GAAW,aAAa,CAAC;IAEtB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,wEAAwE;QACxE,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;SAClC;IACH,CAAC;;oFAdU,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEACI;QAAA,uEAAuB;QAAA,uDAAU;QAAA,4DAAI;QACrC,4EAA+C;QAAvC,0IAAS,cAAU,IAAC;QAAmB,4DAAC;QAAA,4DAAS;QAC7D,4DAAM;;QAFqB,0DAAU;QAAV,yEAAU;;6FDMxB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAEE,oDAAM;;kBACN,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;6FDON,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAyD;;AAOlD,MAAM,eAAe;IAI1B;QAFS,UAAK,GAAW,OAAO,CAAC;QACxB,aAAQ,GAAW,QAAQ,CAAC;IACrB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EAPU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,qEAAI;QAAA,uDAAW;QAAA,4DAAK;QACxB,4DAAS;;QAFD,sEAAoB;QACpB,0DAAW;QAAX,0EAAW;;6FDMN,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;kBAGE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,yEACI;QAAA,uEAAkB;QAAA,iEAAM;QAAA,4DAAI;QAC5B,uEAA0B;QAAA,mEAAQ;QAAA,4DAAI;QAC1C,4DAAM;;6FDIO,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyG;AAE5B;AACnB;;;;;;;ICOtC,sEACI;IAAA,4EACI;IADI,wVAAuB;IAC3B,uDACJ;IAAA,4DAAS;IACb,4DAAM;;;IAFE,0DACJ;IADI,wFACJ;;;IAYR,uEAEe;;ADjBxB,MAAM,iBAAiB;IAM5B,YAAoB,YAAiC,EAAU,gBAAkC,EAAU,QAAkC;QAAzH,iBAAY,GAAZ,YAAY,CAAqB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,aAAQ,GAAR,QAAQ,CAA0B;QAF7I,oBAAe,GAAG,qEAAc,CAAC;IAEgH,CAAC;IAElJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IACM,QAAQ,CAAC,OAAyB;QAEvC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,SAAS,CAAC;IAC3C,CAAC;;kFAlBU,iBAAiB;iGAAjB,iBAAiB;;;;;;QCV9B,sEACI;QAAA,yEACI;QAAA,oEACI;QAAA,uGACJ;QAAA,4DAAI;QACR,4DAAM;QACN,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6GACI;QAIR,4DAAM;QACV,4DAAM;QAGN,yEACI;QAAA,0EACI;QAAA,mEAEI;QACR,4DAAM;QACN,iIAEA;QACJ,4DAAM;QACV,4DAAM;QACV,4DAAU;QACd,4DAAM;;QArBmB,0DAA4B;QAA5B,iFAA4B;QAW9B,0DAAyB;QAAzB,oJAAyB;QAIlB,0DAAoC;QAApC,kGAAoC;;6FDfrD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAME,uDAAS;mBAAC,WAAW;;;;;;;;;;;;;;AEfxB;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE4B;;;;;ICY1E,uEACI;IAAA,oEACJ;IAAA,4DAAI;;;IAFiC,sJAAoB;IAChD,0DAAkB;IAAlB,oJAAkB;IAAC,2FAAsB;;ADN/C,MAAM,oBAAoB;IAI/B,YAAoB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;IAAI,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IACrD,CAAC;;wFARU,oBAAoB;oGAApB,oBAAoB;QCTjC,yEACI;QAAA,qEACI;QAAA,qEAAI;QAAA,yFAA8B;QAAA,4DAAK;QACvC,qEAAI;QAAA,8EAAmB;QAAA,4DAAK;QAC5B,qEAAI;QAAA,iGAAsC;QAAA,4DAAK;QAC/C,qEACI;QAAA,uHACA;QAAA,iEACA;QAAA,uJAEJ;QAAA,4DAAK;QACT,4DAAK;QACT,4DAAM;QACN,0EACI;QAAA,8GACI;QAER,4DAAM;;QAHC,2DAAiC;QAAjC,qFAAiC;;6FDL3B,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE4B;;;;;;;;ICK9D,oFAA4F;;;IAAxC,6EAAiB;;;IAUzE,oEAA2C;IAAA,uDAAO;IAAA,4DAAI;;;IAAX,0DAAO;IAAP,uEAAO;;ADRvD,MAAM,eAAe;IAG1B,YAAoB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;IAAI,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,0BAA0B,EAAE,CAAC;IAC1E,CAAC;;8EATU,eAAe;+FAAf,eAAe;QCT5B,yEACI;QAAA,8EAAqC;QACrC,0EACI;QAAA,yEACI;QAAA,wEAAqB;QAAA,qEAAU;QAAA,4DAAK;QACpC,mEACA;QAAA,yEACI;QAAA,2IAAsE;QAC1E,4DAAM;QACV,4DAAM;QACV,4DAAU;QACV,0EACI;QAAA,kFAA8D;QAClE,4DAAU;QACV,2EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,iFAAqB;QAAA,4DAAK;QAC9B,yGAA2C;QAC/C,4DAAM;QACV,4DAAU;QACd,4DAAM;;QAb+B,0DAA8B;QAA9B,gFAA8B;QAUpD,0DAAuC;QAAvC,4FAAuC;;6FDRzC,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACwB;;;;;;;;;ICItE,oFACiB;IAD+C,yWAAuC;IACvG,4DAAiB;;;IAD8B,4EAAgB;;ADE5D,MAAM,mBAAmB;IAI9B,YAAoB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;IAAI,CAAC;IAE1D,QAAQ;QACN,6CAA6C;QAC7C,IAAI,CAAC,MAAM,GAAG;YACZ,eAAe;YACf,eAAe;YACf,WAAW;YACX,kBAAkB;SACnB;IACH,CAAC;IACD,OAAO,CAAC,OAAO;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IACD,cAAc,CAAC,OAAO;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC;IACvD,CAAC;IACD,UAAU,CAAC,QAAgB;QACzB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACjD,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SACnE;IACH,CAAC;;sFAzBU,mBAAmB;mGAAnB,mBAAmB;QCPhC,sEACI;QAAA,2EAA8C;QAE9C,kFAAuG;QAAzF,mKAAe,mBAAe,IAAC;QAA2C,4DAAe;QAEvG,qIACA;QACA,2EAAsE;QACtE,kFAA2G;QAA7F,mKAAe,sBAAkB,IAAC;QAA4C,4DAAe;QAC/G,4DAAM;;QAJc,0DAA8B;QAA9B,+EAA8B;;6FDErC,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA+E;AACpC;;;AAQpC,MAAM,iBAAiB;IAI5B;QADU,eAAU,GAAuB,IAAI,0DAAY,EAAE,CAAC;IAC9C,CAAC;IAEjB,QAAQ;IACR,CAAC;IACD,qBAAqB;IACrB,UAAU;QACR,IAAI,OAAO,GAAG;YACZ,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;SAClC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IACD,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;kFArBU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEACI;QAAA,2EACA;QADO,0IAAU,sBAAc,IAAC;QAAhC,4DACA;QAAA,uEAAqB;QAAA,uDAAgB;QAAA,4DAAI;QACzC,4EAA6C;QAArC,yIAAS,sBAAc,IAAC;QAAa,4DAAC;QAAA,4DAAS;QAC3D,4DAAM;;QAJD,qFAAwB;QAEJ,0DAAgB;QAAhB,+EAAgB;;6FDO5B,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAGE,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AEZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEQ;;;;;;;;;ICA1D,mFACgB;IADwC,0VAAiC;IACzF,4DAAgB;;;IAD0B,yEAAa;;ADOhD,MAAM,cAAc;IAGzB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC3C,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;IACpD,CAAC;IACD,OAAO,CAAC,IAAU;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;;4EAdU,cAAc;8FAAd,cAAc;QCT3B,2EAAuC;QACvC,kFAAiF;QAAnE,sJAAW,mBAAe,IAAC;QAAyB,4DAAe;QACjF,8HACA;;QADe,0DAA0B;QAA1B,8EAA0B;;6FDO5B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,mBAAmB;IAE9B;QADA,MAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAChB,CAAC;IAEjB,wBAAwB,CAAC,OAAY,EAAE,QAAgB;QACrD,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,OAAO;SACR;QACD,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACtF,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC;QACrC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;;sFAfU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,IAAI;CAIhB;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAyC;AACM;;AAQxC,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBAJd;YACP,4DAAY;SACb;mIAEU,YAAY,cAHrB,4DAAY;6FAGH,YAAY;cANxB,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;iBACb;aACF;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;AACgB;;;AAQpD,MAAM,iBAAiB;IAO5B,YAAoB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;QANjD,eAAU,GAAmB,EAAE,CAAC;QAChC,gBAAW,GAAa;YACtB,eAAe;YACf,eAAe;YACf,eAAe;SAChB,CAAC;QAEF,wBAAwB;QACxB,WAAM,GAAoB;YACxB;gBACE,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE;oBACJ,wBAAwB;oBACxB,UAAU;oBACV,wCAAwC;oBACxC,6BAA6B;oBAC7B,0EAA0E;iBAC3E;aACF;YACD;gBACE,KAAK,EAAE,sBAAsB;gBAC7B,IAAI,EAAE;oBACJ,oBAAoB;oBACpB,kBAAkB;oBAClB,iBAAiB;oBACjB,wBAAwB;oBACxB,6DAA6D;iBAC9D;aACF;YACD;gBACE,KAAK,EAAE,yBAAyB;gBAChC,IAAI,EAAE;oBACJ,4BAA4B;oBAC5B,aAAa;oBACb,yBAAyB;oBACzB,oBAAoB;oBACpB,6BAA6B;oBAC7B,2BAA2B;oBAC3B,uCAAuC;oBACvC,4BAA4B;oBAC5B,uBAAuB;iBACxB;aACF;YACD;gBACE,KAAK,EAAE,6BAA6B;gBACpC,IAAI,EAAE;oBACJ,0CAA0C;oBAC1C,sDAAsD;oBACtD,oCAAoC;iBACrC;aACF;SACF,CAAC;QACF,sCAAsC;QACtC,iBAAY,GAAyB;YACnC;gBACE,IAAI,EAAE,wDAAwD;gBAC9D,GAAG,EAAE,yBAAyB;gBAC9B,OAAO,EAAE,UAAU;aACpB;YACD;gBACE,IAAI,EAAE,6CAA6C;gBACnD,GAAG,EAAE,sBAAsB;gBAC3B,OAAO,EAAE,OAAO;aACjB;YACD;gBACE,IAAI,EAAE,0CAA0C;gBAChD,GAAG,EAAE,qDAAqD;gBAC1D,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,IAAI,EAAE,sCAAsC;gBAC5C,GAAG,EAAE,yBAAyB;gBAC9B,OAAO,EAAE,UAAU;aACpB;YACD;gBACE,IAAI,EAAE,+BAA+B;gBACrC,GAAG,EAAE,wBAAwB;gBAC7B,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,IAAI,EAAE,+DAA+D;gBACrE,GAAG,EAAE,sBAAsB;gBAC3B,OAAO,EAAE,OAAO;aACjB;YACD;gBACE,IAAI,EAAE,0DAA0D;gBAChE,GAAG,EAAE,wBAAwB;gBAC7B,OAAO,EAAE,SAAS;aACnB;SACF,CAAC;QAEF,wBAAmB,GAAa;YAC9B,uJAAuJ;YACvJ,GAAG;YACH,4MAA4M;YAC5M,sKAAsK;SACvK,CAAC;IA1FmD,CAAC;IA2FtD,gBAAgB;IAChB,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,gBAAgB;IAChB,aAAa;QACX,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACzD,OAAM;SACP;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7C;IACH,CAAC;IACD,mCAAmC;IAC3B,iBAAiB,CAAC,OAAe;QACvC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gCAAgC;IAChC,YAAY;QACV,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IACD,gDAAgD;IAChD,0BAA0B;QACxB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;;kFA5HU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;AACM;;;AAO1C,MAAM,iBAAiB;IAE5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE5B,cAAS,GAAG,cAAc,CAAC;IAFK,CAAC;IAGzC,UAAU,CAAC,QAAgB;QACzB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,OAAO,CAAC,CAAC;IAC9C,CAAC;;kFARU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAE0B;AACmB;AACa;AACb;;AAIjF,MAAM,mBAAmB;IAuB9B;QAtBA,aAAQ,GAAuB;YAC7B;gBACE,KAAK,EAAE,WAAW;gBAClB,WAAW,EAAE,ydAAyd;gBACte,SAAS,EAAE,mGAAiB;aAC7B;YACD;gBACE,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,0EAA0E;gBACvF,SAAS,EAAE,gFAAc;aAC1B;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,WAAW,EAAE,2MAA2M;gBACxN,SAAS,EAAE,mGAAmB;aAC/B;YACD;gBACE,KAAK,EAAE,oBAAoB;gBAC3B,WAAW,EAAE,uQAAuQ;gBACpR,SAAS,EAAE,gHAAsB;aAClC;SACF,CAAC;IACc,CAAC;IAEjB,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;;sFA3BU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,WAAW;IACtB,gBAAgB,CAAC;IACjB,eAAe;IACf,QAAQ;QACN,4BAA4B;QAC5B,MAAM,GAAG,GAAG,GAAG,KAAK,IAAI,MAAM,EAAE;QAChC,8DAA8D;QAC9D,OAAO;YACL;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,uBAAuB;gBAC9B,SAAS,EAAE,KAAK;aACjB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,2BAA2B;gBAClC,SAAS,EAAE,KAAK;aACjB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,6BAA6B;gBACpC,SAAS,EAAE,KAAK;aACjB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,mCAAmC;gBAC1C,SAAS,EAAE,KAAK;aACjB;SACF,CAAC;IACJ,CAAC;;sEA7BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResumeComponent } from './components/resume/resume.component';\nimport { ProjectsComponent } from './components/projects/projects.component';\n\n\nconst routes: Routes = [\n  { path: '', component: ResumeComponent },\n  { path: 'projects', component: ProjectsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Resume';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align: center;\" class=\"intro\">\n  <h1>\n    Abraham Sanchez Fonseca\n  </h1>\n  Unity 3d ,C# Developer & Video Games Fan\n</div>\n\n<div>\n  <app-nav-control></app-nav-control>\n  <router-outlet></router-outlet>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IntroComponent } from './components/intro/intro.component';\nimport { TodosComponent } from './components/todos/todos.component';\nimport { TodoItemComponent } from './components/todos/todo-item/todo-item.component';\nimport { HeaderComponent } from './components/layout/header/header.component';\nimport { AddTodoComponent } from './components/add-todo/add-todo.component';\nimport { ResumeComponent } from './components/resume/resume.component';\nimport { NavControlComponent } from './components/nav-control/nav-control.component';\nimport { InputAreaComponent } from './components/input-area/input-area.component';\nimport { TextToJsonComponent } from './components/text-to-json/text-to-json.component';\nimport { AddTextComponent } from './components/Input/add-text/add-text.component';\nimport { MultiLineToJsonComponent } from './components/Input/multi-line-to-json/multi-line-to-json.component';\nimport { ExperienceObjComponent } from './components/Input/experience-obj/experience-obj.component';\nimport { ExpObjDisplayComponent } from './components/display/exp-obj-display/exp-obj-display.component';\nimport { ResumeIntroComponent } from './components/resume-intro/resume-intro.component';\nimport { ListDisplayComponent } from './components/display/list-display/list-display.component';\nimport { ProjectsComponent } from './components/projects/projects.component';\nimport { FlipGameComponent } from './components/Project/flip-game/flip-game.component';\nimport { ImagesGridDisplayComponent } from './components/display/images-grid-display/images-grid-display.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IntroComponent,\n    TodosComponent,\n    TodoItemComponent,\n    HeaderComponent,\n    AddTodoComponent,\n    ResumeComponent,\n    NavControlComponent,\n    InputAreaComponent,\n    TextToJsonComponent,\n    AddTextComponent,\n    MultiLineToJsonComponent,\n    ExperienceObjComponent,\n    ExpObjDisplayComponent,\n    ResumeIntroComponent,\n    ListDisplayComponent,\n    ProjectsComponent,\n    FlipGameComponent,\n    ImagesGridDisplayComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    TodosComponent,\n    ExperienceObjComponent,\n    TextToJsonComponent,\n    FlipGameComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-add-text',\n  templateUrl: './add-text.component.html',\n  styleUrls: ['./add-text.component.css']\n})\nexport class AddTextComponent implements OnInit {\n  @Output() addTextData: EventEmitter<any> = new EventEmitter();\n  @Input('tempText') tempPlaceHolder: string = \"Add...\";\n  @Input('addText') addText: string = \"Submit\";\n\n  myText: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  onSubmit() {\n    //this would send the content of the input field only if there is a text\n    if (this.myText) {\n      this.addTextData.emit(this.myText)\n      this.myText = null;\n    }\n  }\n}\n","<form class=\"inputForm\" (ngSubmit)=\"onSubmit()\">\n    <input type=\"text\" name=\"myText\" [(ngModel)]=\"myText\" placeholder=\"{{tempPlaceHolder}}\">\n    <input type=\"submit\" value=\"{{addText}}\" class=\"btn\">\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MultiLineToJsonComponent } from '../multi-line-to-json/multi-line-to-json.component';\nimport { DownloadToolService } from 'src/app/library/download-tool.service';\nimport { ExpObjModule } from 'src/app/models/exp-obj/exp-obj.module';\n\n\n@Component({\n  selector: 'app-experience-obj',\n  templateUrl: './experience-obj.component.html',\n  styleUrls: ['./experience-obj.component.css']\n})\nexport class ExperienceObjComponent implements OnInit {\n  @ViewChild('multiText') multiLineText: MultiLineToJsonComponent;\n\n  expObj: ExpObjModule = new ExpObjModule();\n  constructor(private downloadTool: DownloadToolService) { }\n\n  ngOnInit() {\n  }\n\n  //Create the ExpObj description and save it as json\n  createExp(theText: any) {\n    let theTextInArray = this.multiLineText.generateText();\n    this.expObj.description = theTextInArray\n    this.downloadTool.DownloadTextToFileAsJson(this.expObj, theText);\n  }\n}\n","<div class=\"expObj\">\n    <!-- Header -->\n    <app-header title=\"Experience Json Creation\"></app-header>\n    <!-- Get the title for the ExpObj -->\n    <div class=\"inputObj\">\n        <label>Title</label>\n        <input type=\"text\" [(ngModel)]=\"expObj.title\">\n    </div>\n    <!-- Get the link that the image will send you to for the ExpObj -->\n    <div class=\"inputObj\">\n        <label>Link</label>\n        <input type=\"text\" [(ngModel)]=\"expObj.link\">\n    </div>\n    <!-- Get the image name with the ending .png,.jpg ,etc based in the path assets/img for the ExpObj -->\n    <div class=\"inputObj\">\n        <label>ImagePath</label>\n        <input type=\"text\" [(ngModel)]=\"expObj.img\">\n    </div>\n    <!-- Multi line area that will be turn in to an array of strings to be used in the expObjDisplay -->\n    <app-multi-line-to-json cssClass=\"expInputArea\" #multiText></app-multi-line-to-json>\n    <!-- Header -->\n    <app-header title=\"Download Experience File\" cssClass=\"smallHeader\"></app-header>\n    <!-- Download the file with the given name as a json -->\n    <app-add-text (addTextData)=\"createExp($event)\" tempText=\"File name...\" addText=\"Download File\"></app-add-text>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-multi-line-to-json',\n  templateUrl: './multi-line-to-json.component.html',\n  styleUrls: ['./multi-line-to-json.component.css']\n})\nexport class MultiLineToJsonComponent implements OnInit {\n  @Output() createText: EventEmitter<any> = new EventEmitter();\n\n  @Input() title: string = \"\";\n  @Input() cssClass: string = \"\";\n  @Input() content: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  generateText() {\n    if (this.content == null || this.content.length == 0) {\n      return;\n    }\n    let textInArray = this.content.split(\"\\n\");\n    console.log(textInArray);\n    return textInArray;\n  }\n}\n","<div>\n    <label>{{title}}</label>\n    <textarea class=\"{{cssClass}}\" name=\"content\" [(ngModel)]=\"content\"></textarea>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ImgDataModule } from 'src/app/models/ImgData/img-data.module';\nimport { ImagesGridDisplayComponent } from '../../display/images-grid-display/images-grid-display.component';\n\n@Component({\n  selector: 'app-flip-game',\n  templateUrl: './flip-game.component.html',\n  styleUrls: ['./flip-game.component.css']\n})\nexport class FlipGameComponent implements OnInit {\n\n  presetsSelect: ImgDataModule[] = [\n    {\n      css: \"preset animal_0\",\n      src: \"\",\n      id: 0\n    },\n    {\n      css: \"preset food_0\",\n      src: \"\",\n      id: 1\n    },\n    {\n      css: \"preset monster_0\",\n      src: \"\",\n      id: 2\n    },\n    {\n      css: \"fileImg\",\n      src: \"\",\n      id: 3\n    }\n  ];\n  //imgs to display\n  loadedImgs: ImgDataModule[] = [];\n  //imgs in the grid\n  gameImgs: ImgDataModule[] = [];\n  //indexs for the random generated imges\n  usedIndex: number[] = [];\n  //current game random generated images\n  curGameImgs: ImgDataModule[] = [];\n\n  //Other imgs\n  animals: ImgDataModule[] = [];\n  foods: ImgDataModule[] = [];\n  monsters: ImgDataModule[] = [];\n  usersImgs: ImgDataModule[] = [];\n\n  //selected indexes  \n  selectedImgs: number[] = [-1, -1];\n\n  curLevel: number = 4;\n  private maxLevel: number = 10;\n  private imageWidth: number = 66;\n\n  private defaultcss: string = \"fileSize\";\n  private defaultImg: string = \"assets/img/back.png\";\n\n  startText: string = \"Start Game!\";\n  displayText: string = \" \";\n\n  private inGame: boolean = false;\n  wins: number = 0;\n  constructor() { }\n\n  ngOnInit() {\n    //Load default images from the presets\n    const maxImgs = 10;\n    for (let i = 0; i < maxImgs; i++) {\n      this.animals.push({ css: \"preset\" + \" \" + \"animal_\" + i, src: \"\", id: i });\n      this.foods.push({ css: \"preset\" + \" \" + \"food_\" + i, src: \"\", id: i });\n      this.monsters.push({ css: \"preset\" + \" \" + \"monster_\" + i, src: \"\", id: i });\n    }\n    this.onPreset(0);\n\n    this.createGrid();\n  }\n  //On Select an img set the preset or the imgs from the users\n  onPreset(id: number) {\n    switch (id) {\n      case 0:\n        this.loadImgs(this.animals);\n        break;\n      case 1:\n        this.loadImgs(this.foods);\n        break;\n      case 2:\n        this.loadImgs(this.monsters);\n        break;\n      case 3:\n        this.loadImgs(this.usersImgs);\n        break;\n    }\n  }\n  //set the given imgs to be display\n  private loadImgs(imgs: ImgDataModule[]) {\n    this.loadedImgs = imgs;\n  }\n  //Get the img src to display\n  getDisplay(img: ImgDataModule) {\n    if (img.src != null) {\n      return img.src;\n    }\n    return \"\";\n  }\n  //Get the css class to disply\n  getCss(img: ImgDataModule) {\n    return img.css;\n  }\n  //On Selected imgs\n  onChange(event: any) {\n\n    this.usersImgs.length = 0;\n    let totalImgs = event.target.files.length;\n    if (totalImgs > 10) {\n      totalImgs = 10;\n    }\n    for (let i = 0; i < totalImgs; i++) {\n      const reader = new FileReader();\n      reader.onload = () => this.addToUsers(reader.result);\n      reader.readAsDataURL(event.target.files[i]);\n\n    }\n    this.onPreset(3);\n  }\n  //Add img to the user images\n  addToUsers(data: any) {\n    this.usersImgs.push({ css: \"fileSize\", src: data, id: 0 });\n  }\n  //Called to increase or decrease the difficulty\n  increaseLevel(more: boolean) {\n    if (more) {\n      if (this.curLevel < this.maxLevel)\n        this.curLevel++;\n    }\n    else {\n      if (this.curLevel > 2)\n        this.curLevel--;\n    }\n    this.createGrid();\n  }\n  //Create grid to display\n  createGrid() {\n    let totalWidth = (this.curLevel * this.imageWidth);\n    document.documentElement.style.setProperty('--gridX', totalWidth.toString() + \"px\");\n    document.documentElement.style.setProperty('--gridY', totalWidth.toString() + \"px\");\n    //Set the data to a clean version\n    const total = this.curLevel * this.curLevel;\n    this.gameImgs.length = 0;\n    for (let i = 0; i < total; i++) {\n      this.gameImgs.push({ css: \"fileSize\", src: this.defaultImg, id: i });\n    }\n  }\n  //on selected an img in the grid display the img that was randomly generated\n  onSelect(img: ImgDataModule) {\n    if (this.inGame == false) {\n      this.showOutput(\"Start the game first..\");\n      return;\n    }\n    const index = img.id;\n    //dont select the same img if already selected\n    if (index === this.selectedImgs[0] || index === this.selectedImgs[1]) {\n      return;\n    }\n    //its in an already compleded index\n    if (this.usedIndex.includes(index)) {\n      return;\n    }\n    //display generated imgs\n    img.css = this.curGameImgs[index].css;\n    img.src = this.curGameImgs[index].src;\n\n    //set the index that was click to the arrays\n    if (this.selectedImgs[0] == -1) {\n      this.selectedImgs[0] = index;\n    }\n    else if (this.selectedImgs[1] == -1) {\n      this.selectedImgs[1] = index;\n    }\n    if (this.selectedImgs[0] != -1 && this.selectedImgs[1] != -1) {\n      setTimeout(() => {\n        //Check if selected\n        if (this.curGameImgs[this.selectedImgs[0]] === this.curGameImgs[this.selectedImgs[1]]) {\n          //couple was completed\n          this.wins++;\n          //add to already finished\n          this.usedIndex.push(this.gameImgs[this.selectedImgs[0]].id);\n          this.usedIndex.push(this.gameImgs[this.selectedImgs[1]].id);\n          //when all couples was found\n          if (this.wins >= (this.curGameImgs.length / 2)) {\n            this.onWin();\n          }\n        }\n        else {\n          //Reset to default data\n          this.gameImgs[this.selectedImgs[0]].css = this.defaultcss;\n          this.gameImgs[this.selectedImgs[0]].src = this.defaultImg;\n          //Reset to default data\n          this.gameImgs[this.selectedImgs[1]].css = this.defaultcss;\n          this.gameImgs[this.selectedImgs[1]].src = this.defaultImg;\n        }\n        //Reset to non selected\n        this.selectedImgs[0] = -1;\n        this.selectedImgs[1] = -1;\n      }, 200);\n    }\n  }\n  //When finish the game\n  onWin() {\n    this.showOutput(\"Congratulations you won!!!\");\n    this.startText = \"New Game!\";\n  }\n  //On Start Game \n  onStartPress() {\n\n    if (this.inGame) {\n      this.inGame = false;\n      this.resetGame();\n      return;\n    }\n    // this.displayText = \"Game Started!\";\n    this.showOutput(\"\");\n    if (this.loadedImgs.length == 0) {\n\n      this.showOutput(\"Need to select items to use\");\n      return;\n    }\n    this.startText = \"Reset Game\";\n\n    this.inGame = true;\n    this.showGameObjs(!this.inGame);\n    this.generateRandomImgs();\n    this.wins = 0;\n  }\n  //show all the game options again\n  resetGame() {\n    this.showGameObjs(!this.inGame);\n    this.startText = \"Start Game!\";\n    this.createGrid();\n  }\n  //Generate what images will be in the game\n  generateRandomImgs() {\n    let imgIndex = 0;\n    let curTotal = 0;\n    const total = this.gameImgs.length;\n    this.curGameImgs.length = total;\n    let added = 0;\n    let random = 0;\n    this.usedIndex.length = 0;\n    while (curTotal < total) {\n\n      added = 0;\n      random = 0;\n      while (added < 2) {\n        random = Math.floor(Math.random() * total);\n        if (this.usedIndex.includes(random) == false) {\n          this.usedIndex.push(random);\n          this.curGameImgs[random] = this.loadedImgs[imgIndex];\n          added++;\n          curTotal++;\n          if (added >= 2) {\n            break;\n          }\n        }\n        if (curTotal >= total) {\n          break;\n        }\n      }\n      imgIndex++;\n      if (imgIndex >= this.loadedImgs.length) {\n        imgIndex = 0;\n      }\n      if (curTotal >= total) {\n        break;\n      }\n    }\n    this.usedIndex.length = 0;\n  }\n  //Show instructions to the user\n  showOutput(text: string) {\n    this.displayText = text;\n  }\n  //Show or hide objects that has to do with the game\n  showGameObjs(show: boolean) {\n\n    if (show) {\n      document.documentElement.style.setProperty('--gameObjs', \"block\");\n    } else {\n      document.documentElement.style.setProperty('--gameObjs', \"none\");\n    }\n  }\n}\n","<div class=\"flipBody\">\n    <hr>\n    <div class=\"topFlip\">\n        <div class=\"presetsImgs \">\n            <div *ngFor=\"let arg of presetsSelect\" class=\"gameObj\">\n                <button class=\" {{arg.css}}\" (click)=\"onPreset(arg.id)\">\n                </button>\n            </div>\n            <div class=\"gameObj\">\n                <p> Max : 10</p>\n                <br>\n                <input type=\"file\" accept=\"image/*\" name=\"image\" id=\"fileSelector\" multiple=true\n                    (change)=\"onChange($event)\">\n            </div>\n        </div>\n        <div class=\"inputArea gameObj\">\n            Difficulty :\n            <button class=\"smallButtons\" (click)=\"increaseLevel(false)\">-</button>\n            <label class=\"curLevel\">{{curLevel}}</label>\n            <button class=\"smallButtons\" (click)=\"increaseLevel(true)\">+</button>\n        </div>\n        <div>{{displayText}}</div>\n        <button class=\"startBut \" (click)=\"onStartPress()\">{{startText}}</button>\n    </div>\n    <hr>\n    <div class=\"mainCont\">\n        <div class=\"leftFlip gameObj\">\n            <h5>Images To Display:</h5>\n            <div class=\"usingImgs\">\n                <div *ngFor=\"let img of loadedImgs\">\n                    <img class=\"{{getCss(img)}}\" src=\"{{getDisplay(img)}}\" alt=\"\">\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div class=\"grid\">\n                <div>\n                    <app-images-grid-display (onSelected)=\"onSelect($event)\" [curImagesData]=\"gameImgs\">\n                    </app-images-grid-display>\n                </div>\n            </div>\n        </div>\n    </div>\n    <br>\n</div>","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-add-todo',\n  templateUrl: './add-todo.component.html',\n  styleUrls: ['./add-todo.component.css']\n})\nexport class AddTodoComponent implements OnInit {\n  @Output() addTodo: EventEmitter<any> = new EventEmitter();\n  title: string;\n  @Input('tempText') tempPlaceHolder: string = \"Add...\";\n  @Input('addText') addText: string = \"Submit\";\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  onSubmit() {\n    if (this.title) {\n      const todo = {\n        title: this.title,\n        completed: false\n      }\n      this.addTodo.emit(todo);\n    }\n  }\n}\n","<form class=\"form\" (ngSubmit)=\"onSubmit()\">\n    <input type=\"text\" name=\"title\" [(ngModel)]=\"title\" placeholder=\"{{tempPlaceHolder}}\">\n    <input type=\"submit\" value=\"{{addText}}\" class=\"btn\">\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { ExpObjModule } from 'src/app/models/exp-obj/exp-obj.module';\n\n@Component({\n  selector: 'app-exp-obj-display',\n  templateUrl: './exp-obj-display.component.html',\n  styleUrls: ['./exp-obj-display.component.css']\n})\nexport class ExpObjDisplayComponent implements OnInit {\n\n  @Input() expObj: ExpObjModule = new ExpObjModule();\n\n  des: string[];\n\n  imgPath: string = \"assets/img/\";\n  constructor() { }\n\n  ngOnInit() {\n    this.des = this.expObj.description;\n  }\n\n}\n","<div class=\"expObj\">\n    <h2> {{expObj.title}}</h2>\n    <a href=\"{{expObj.link}}\" target=\"_blanck\"> <img src=\"{{(imgPath + expObj.img)}}\" class=\"image_1\"></a>\n\n    <p *ngFor=\"let expObj of des\" class=\"expText\"> {{expObj}}</p>\n</div>","import { Component, OnInit, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { ImgDataModule } from 'src/app/models/ImgData/img-data.module';\n\n\n@Component({\n  selector: 'app-images-grid-display',\n  templateUrl: './images-grid-display.component.html',\n  styleUrls: ['./images-grid-display.component.css']\n})\nexport class ImagesGridDisplayComponent implements OnInit {\n  @Output() onSelected: EventEmitter<any> = new EventEmitter();\n\n  curImages: HTMLImageElement[] = [];\n  defaultSrc: string = \"\";\n  @ViewChild(\"containerObj\") container;\n\n  @Input() curImagesData: ImgDataModule[] = [\n    {\n      css: \"preset animal_1\",\n      src: \"\",\n      id: 0\n    },\n    {\n      css: \"preset animal_3\",\n      src: \"\",\n      id: 1\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  //shows or hides all images on the grid\n  ShowCurImages(show: boolean) {\n    this.curImages.forEach((img) => {\n      this.ShowComponent(img, show);\n    })\n  }\n\n  //Set the src of the object to default\n  SetSrcToDefault(index: number) {\n    this.curImages[index].src = this.defaultSrc;\n  }\n  //controls the visibility of the given component\n  ShowComponent(img: HTMLImageElement, show: boolean) {\n    if (show) {\n      img.style.display = \"block\";\n    }\n    else {\n      img.style.display = \"none\";\n    }\n  }\n\n  //Sets the sre to the images at the given index\n  SetSrcTo(index: number, src: string) {\n    this.curImages[index].src = src;\n  }\n\n  onSelect(img: ImgDataModule) {\n    this.onSelected.emit(img);\n  }\n\n  getDisplay(img: ImgDataModule) {\n    return img.src;\n  }\n  getCss(img: ImgDataModule) {\n    return img.css;\n  }\n}\n","<div class=\"gridParent\">\n    <div class=\"gridObj\">\n        <div *ngFor=\"let img of curImagesData\">\n            <a (click)=\"onSelect(img)\">\n                <img class=\"{{getCss(img)}}\" src=\"{{getDisplay(img)}}\" alt=\"\">\n            </a>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ListObjModule } from 'src/app/models/list-obj/list-obj.module';\nimport { ResumeDataService } from 'src/app/services/Data/resume-data.service';\n\n@Component({\n  selector: 'app-list-display',\n  templateUrl: './list-display.component.html',\n  styleUrls: ['./list-display.component.css']\n})\nexport class ListDisplayComponent implements OnInit {\n\n  @Input() title: string = \"title\";\n  skills: ListObjModule[];\n  constructor(private resumeData: ResumeDataService) { }\n  ngOnInit() {\n    this.skills = this.resumeData.getSkills();\n  }\n}\n","<div class=\"skills\">\n    <h2 class=\"h2Header\">\n        {{title}}\n    </h2>\n    <hr class=\"hrDotted\">\n    <div class=\"split\"></div>\n    <div class=\"skillsMain\">\n        <div *ngFor=\"let arg of skills\" class=\"skillsObj\">\n            <h4>{{arg.title}} </h4>\n            <ul *ngFor=\"let list of arg.list\">\n                <li [innerHTML]=list> </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-input-area',\n  templateUrl: './input-area.component.html',\n  styleUrls: ['./input-area.component.css']\n})\nexport class InputAreaComponent implements OnInit {\n  @Output() onDeleteText: EventEmitter<any> = new EventEmitter();\n  @Input() text: string = \"add text...\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onDelete() {\n    //this would send the content of the input field only if there is a text\n    if (this.text) {\n      this.onDeleteText.emit(this.text)\n    }\n  }\n}\n","<div class=\"textToAdd\">\n    <p class=\"inpuTextObj\">{{ text }}</p>\n    <button (click)=\"onDelete()\" class=\"deleteBut\">X</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-intro',\n  templateUrl: './intro.component.html',\n  styleUrls: ['./intro.component.css']\n})\nexport class IntroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>intro works!</p>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() title: string = 'Title';\n  @Input() cssClass: string = \"header\";\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<header class=\"{{cssClass}}\">\n    <h2>{{ title }}</h2>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-control',\n  templateUrl: './nav-control.component.html',\n  styleUrls: ['./nav-control.component.css']\n})\nexport class NavControlComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"mainNav\">\n    <a routerLink=\"/\">Resume</a>\n    <a routerLink=\"/projects\">Projects</a>\n</nav>","import { Component, OnInit, ViewChild, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { ProjectObjModule } from 'src/app/models/project-obj/project-obj.module';\nimport { ProjectsDataService } from 'src/app/services/projects-data.service';\nimport { TodosComponent } from '../todos/todos.component';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  projects: ProjectObjModule[];\n  description: string;\n  componentToLoad = TodosComponent;\n  @ViewChild('container') entry: ViewContainerRef;\n  constructor(private projectsData: ProjectsDataService, private viewContainerRef: ViewContainerRef, private resolver: ComponentFactoryResolver) { }\n\n  ngOnInit() {\n    this.projects = this.projectsData.getProjects();\n    if (this.projects.length > 0) {\n      this.onSelect(this.projects[0]);\n    }\n  }\n  public onSelect(project: ProjectObjModule) {\n\n    this.description = project.description;\n    this.componentToLoad = project.component;\n  }\n\n\n}\n","<div>\n    <div class=\"infoList projectsInfo\">\n        <p>\n            Projects and Practices for web development\n        </p>\n    </div>\n    <section>\n        <div class=\"projects\">\n            <div class=\"projectSelector \">\n                <div class=\"allProjects\">\n                    <div *ngFor=\"let arg of projects\">\n                        <button (click)=\"onSelect(arg)\">\n                            {{arg.title}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"projectArea\">\n                <div class=\"des\">\n                    <p [innerHtml]=\"description\">\n\n                    </p>\n                </div>\n                <ng-container *ngComponentOutlet=\"componentToLoad\" class=\"project\">\n\n                </ng-container>\n            </div>\n        </div>\n    </section>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ContactMediaModule } from 'src/app/models/contact-media/contact-media.module';\nimport { ResumeDataService } from 'src/app/services/Data/resume-data.service';\n\n@Component({\n  selector: 'app-resume-intro',\n  templateUrl: './resume-intro.component.html',\n  styleUrls: ['./resume-intro.component.css']\n})\nexport class ResumeIntroComponent implements OnInit {\n\n  contactMedia: ContactMediaModule[];\n\n  constructor(private resumeData: ResumeDataService) { }\n\n  ngOnInit() {\n    this.contactMedia = this.resumeData.getMediaData();\n  }\n}\n","<div class=\"infoList\">\n    <ul>\n        <li>Email: abraham_gto@hotmail.com</li>\n        <li>Skype: lholykillerl</li>\n        <li>From : Salamanca, Guanajuato in Mexico</li>\n        <li>\n            I'm a single mexican 31 years old.I'm willing to relocate.\n            <br>\n            Some of my good points would be that i'm honest,\n            good-natured,open-minded and determined.\n        </li>\n    </ul>\n</div>\n<div class=\"media\">\n    <a *ngFor=\"let info of contactMedia\" href=\"{{info.link}}\" target=\"_blank\">\n        <img src=\"{{info.src}}\" alt=\"{{info.altText}}\">\n    </a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ExpObjModule } from 'src/app/models/exp-obj/exp-obj.module';\nimport { ResumeDataService } from 'src/app/services/Data/resume-data.service';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})\nexport class ResumeComponent implements OnInit {\n  expObjs: ExpObjModule[];\n  summeryAndEducation: string[];\n  constructor(private resumeData: ResumeDataService) { }\n\n  ngOnInit() {\n    this.resumeData.getExperience();\n    this.expObjs = this.resumeData.allExpObjs;\n    this.summeryAndEducation = this.resumeData.getSummeryAndEducationText();\n  }\n}\n","<div class=\"mainBg\">\r\n    <app-resume-intro></app-resume-intro>\r\n    <section>\r\n        <div class=\"bg-1\">\r\n            <h2 class=\"h2Header\">Experience</h2>\r\n            <hr class=\"hrDotted\">\r\n            <div class=\"expArea\">\r\n                <app-exp-obj-display *ngFor=\"let expObj of expObjs\" [expObj]=\"expObj\"></app-exp-obj-display>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section>\r\n        <app-list-display title=\"Technical Skills\"></app-list-display>\r\n    </section>\r\n    <section>\r\n        <div class=\"summery bg-1\">\r\n            <h3>Summary and Education</h3>\r\n            <p *ngFor=\"let arg of summeryAndEducation\">{{arg}}</p>\r\n        </div>\r\n    </section>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DownloadToolService } from '../../library/download-tool.service';\n@Component({\n  selector: 'app-text-to-json',\n  templateUrl: './text-to-json.component.html',\n  styleUrls: ['./text-to-json.component.css']\n})\nexport class TextToJsonComponent implements OnInit {\n\n  myText: string[];\n\n  constructor(private downloadTool: DownloadToolService) { }\n\n  ngOnInit() {\n    //TODO remove this and get the data from json\n    this.myText = [\n      \"Add this text\",\n      \"And This too!\",\n      \"One More!\",\n      \"And another one!\"\n    ]\n  }\n  addData(theText) {\n    this.myText.push(theText);\n  }\n  deleteTextData(theText) {\n    this.myText = this.myText.filter(t => t !== theText);\n  }\n  createJson(fileName: string) {\n    if (this.myText != null && this.myText.length > 0) {\n      this.downloadTool.DownloadTextToFileAsJson(this.myText, fileName);\n    }\n  }\n}\n","<div>\n    <app-header title=\"Text To Json\"></app-header>\n    <!-- Adds a input field together with a submit button and listen to the addTextData event -->\n    <app-add-text (addTextData)=\"addData($event)\" tempText=\"Add Text To Json\" addText=\"Add\"></app-add-text>\n    <!-- Generate all the Texts that are in the variable myText -->\n    <app-input-area *ngFor=\"let theText of myText\" [text]=\"theText\" (onDeleteText)=\"deleteTextData($event)\">\n    </app-input-area>\n    <app-header title=\"Download File\" cssClass=\"smallHeader\"></app-header>\n    <app-add-text (addTextData)=\"createJson($event)\" tempText=\"File name...\" addText=\"Download\"></app-add-text>\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Todo } from 'src/app/models/Todo';\n\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.css']\n})\nexport class TodoItemComponent implements OnInit {\n\n  @Input() todo: Todo;\n  @Output() deleteTodo: EventEmitter<Todo> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n  //Set dunamic Classes\n  setClasses() {\n    let classes = {\n      todo: true,\n      'isComplete': this.todo.completed\n    }\n    return classes;\n  }\n  onToggle(todo) {\n    todo.completed = !todo.completed;\n  }\n  onDelete(todo) {\n    this.deleteTodo.emit(todo);\n  }\n}\n","<div [ngClass]=\"setClasses()\">\n    <input (change)=\"onToggle(todo)\" type=\"checkbox\" />\n    <p class=\"theTittle\">{{ todo.title }}</p>\n    <button (click)=\"onDelete(todo)\" class=\"del\">x</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Todo } from \"../../models/Todo\";\nimport { TodoService } from \"../../services/todo.service\";\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent implements OnInit {\n\n  todos: Todo[];\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit() {\n    this.todos = this.todoService.getTodos();\n  }\n\n  deleteTodo(todo: Todo) {\n    this.todos = this.todos.filter((t) => t !== todo);\n  }\n  addTodo(todo: Todo) {\n    this.todos.push(todo);\n  }\n}\n","<app-header title=\"Todos\"></app-header>\n<app-add-todo (addTodo)=\"addTodo($event)\" tempText=\"Add TODO....\"></app-add-todo>\n<app-todo-item *ngFor=\"let todo of todos\" [todo]=\"todo\" (deleteTodo)=\"deleteTodo($event)\">\n</app-todo-item>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DownloadToolService {\n  a = document.createElement('a');\n  constructor() { }\n\n  DownloadTextToFileAsJson(theText: any, fileName: string) {\n    if (theText == null) {\n      console.log(\"No Data\");\n      return;\n    }\n    var blob = new Blob([JSON.stringify(theText, null, 2)], { type: 'application/json' });\n    var url = window.URL.createObjectURL(blob);\n    this.a.href = url;\n    this.a.download = fileName + '.json';\n    this.a.click();\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n","export class Todo {\r\n    id: number;\r\n    title: string;\r\n    completed: boolean;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ExpObjModule {\n  title: string;\n  link: string;\n  img: string;\n  description: string[];\n}\n","import { Injectable } from '@angular/core';\nimport { JsonLoaderService } from '../json-loader.service';\nimport { ExpObjModule } from 'src/app/models/exp-obj/exp-obj.module';\nimport { ListObjModule } from 'src/app/models/list-obj/list-obj.module';\nimport { ContactMediaModule } from 'src/app/models/contact-media/contact-media.module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResumeDataService {\n  allExpObjs: ExpObjModule[] = [];\n  allExpNames: string[] = [\n    \"expObj_1.json\",\n    \"expObj_2.json\",\n    \"expObj_3.json\"\n  ];\n  constructor(private jsonLoader: JsonLoaderService) { }\n  //Skills by list of objs\n  skills: ListObjModule[] = [\n    {\n      title: \"General:\",\n      list: [\n        \"C#,HTML,CSS,JavaScript\",\n        \"Unity 3d\",\n        \"Steam SDK  <br> (Steam Workshop , etc)\",\n        \"Game Development in general\",\n        \"Basics knowledge in some <br> productions pipelines for game development\"\n      ]\n    },\n    {\n      title: \"Programing in unity:\",\n      list: [\n        \"Game-play Features\",\n        \"Mechanic Systems\",\n        \"Modding Support\",\n        \"Multi Language Support\",\n        \"Flexible Ui build at runtime<br>(working on ui mod support)\"\n      ]\n    },\n    {\n      title: \"Unity Editor Tools for:\",\n      list: [\n        \"Speed up workflow in unity\",\n        \"Manage data\",\n        \"Handle existing content\",\n        \"Adding new content\",\n        \"Multi Language editor tools\",\n        \"Json creation and editing\",\n        \"Automatization tools for level design\",\n        \"Random generated buildings\",\n        \"Modding support Tools\"\n      ]\n    },\n    {\n      title: \"Game Development Pipelines:\",\n      list: [\n        \"3d modeling <br> (Blender, Maya, Zbrush)\",\n        \"Texturing <br> (Substance painter , Photoshop, Gimp)\",\n        \"Rigging and Animation<br>(Blender)\"\n      ]\n    }\n  ];\n  //Data for the media images with links\n  contactMedia: ContactMediaModule[] = [\n    {\n      link: \"https://www.linkedin.com/in/abraham-sanchez-374236102/\",\n      src: \"assets/img/linkedin.png\",\n      altText: \"LinkedIn\"\n    },\n    {\n      link: \"https://connect.unity.com/u/abraham-sanchez\",\n      src: \"assets/img/unity.jpg\",\n      altText: \"Unity\"\n    },\n    {\n      link: \"https://www.indiedb.com/games/mobsworlds\",\n      src: \"https://media.indiedb.com/images/global/indiedb.png\",\n      altText: \"IndieDb\"\n    },\n    {\n      link: \"https://www.facebook.com/MobsWorlds/\",\n      src: \"assets/img/facebook.png\",\n      altText: \"Facebook\"\n    },\n    {\n      link: \"https://twitter.com/WorldsDev\",\n      src: \"assets/img/twitter.png\",\n      altText: \"Twitter\"\n    },\n    {\n      link: \"https://store.steampowered.com/app/826930/The_Capture_Worlds/\",\n      src: \"assets/img/steam.png\",\n      altText: \"Steam\"\n    },\n    {\n      link: \"https://www.youtube.com/channel/UCCS0uX_JDG_3OBPt2jYQsfw\",\n      src: \"assets/img/youtube.png\",\n      altText: \"YouTube\"\n    }\n  ];\n\n  summeryAndEducation: string[] = [\n    \"I been learning and working on Unity3d for more than 6 years focusing in programming(c#) for pc games.I been a self-taught person more than 11 years.\",\n    \"-\",\n    \"Right now I'm studying on a government open education system so i can get my Bachelor's Degree , learning Unreal 4 Engine, c++, python and asp.net mvc ,while working in my video game The Capture Worlds.\",\n    \"I also have been learning Japanese in my free time because i would love to visit Japan in the future , i realy like the culture ,its morals and all it has to offer.\"\n  ];\n  //Get the Skills\n  getSkills(): ListObjModule[] {\n    return this.skills;\n  }\n  //Get Experience\n  getExperience() {\n    if (this.allExpObjs != null && this.allExpObjs.length > 0) {\n      return\n    }\n    for (let i = 0; i < this.allExpNames.length; i++) {\n      this.getExpObjWithName(this.allExpNames[i]);\n    }\n  }\n  //Get the data from the json loader\n  private getExpObjWithName(expName: string) {\n    this.jsonLoader.getExpObjs(expName).subscribe(data => {\n      this.allExpObjs.push(data);\n    });\n  }\n  //Get Media data from local data\n  getMediaData(): ContactMediaModule[] {\n    return this.contactMedia;\n  }\n  //get education and summery text from local data\n  getSummeryAndEducationText(): string[] {\n    return this.summeryAndEducation;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { ExpObjModule } from '../models/exp-obj/exp-obj.module';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonLoaderService {\n\n  constructor(private http: HttpClient) { }\n\n  private jsonsPath = \"assets/json/\";\n  getExpObjs(jsonName: string): Observable<ExpObjModule> {\n    var thePath = this.jsonsPath + jsonName;\n    return this.http.get<ExpObjModule>(thePath);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ProjectObjModule } from '../models/project-obj/project-obj.module';\nimport { TodosComponent } from '../components/todos/todos.component';\nimport { TextToJsonComponent } from '../components/text-to-json/text-to-json.component';\nimport { ExperienceObjComponent } from '../components/Input/experience-obj/experience-obj.component';\nimport { FlipGameComponent } from '../components/Project/flip-game/flip-game.component';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsDataService {\n  projects: ProjectObjModule[] = [\n    {\n      title: \"Flip Game\",\n      description: \"<h2>Find them All!</h2>(Work in progress)<br> This will be a Concentration (card game) where you have to find pairs and when you find them all you win. <br>You will be able to upload your own images and use them in the game, or select from a list of preset group of images.This is to practice and learn JavaScript,HTML and CSS. <br>Select Images to use ,select the level of difficulty , the Start Game Button will be display when you have at least two (2) images to use. \",\n      component: FlipGameComponent\n    },\n    {\n      title: \"Todos\",\n      description: \"Simple Todo List where you can add, remove and check if it is completed.\",\n      component: TodosComponent\n    },\n    {\n      title: \"Text To Json\",\n      description: \"You can add text to the list and delete them if needed <br> Then you can save them as a json is downloaded with the given name<br> You have to give it a name else you won't be able to download the file\",\n      component: TextToJsonComponent\n    },\n    {\n      title: \"Multi Line To Json\",\n      description: \"You can save to json and download it with the given name all the text in multiple lines <br> I used this to create the Experience objects that are in the resume page <br> and loaded the json files that i created with this tool to build the Ui and fill the data.\",\n      component: ExperienceObjComponent\n    }\n  ];\n  constructor() { }\n\n  getProjects(): ProjectObjModule[] {\n    return this.projects;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  constructor() { }\n  //Get TODO LIst\n  getTodos() {\n    //Example of a combined text\n    const url = `${\"dir\"}/${\"path\"}`\n    //TODO get from a local Json file or from json in google drive\n    return [\n      {\n        id: 0,\n        title: \"Finish TODOs tutorial\",\n        completed: false\n      },\n      {\n        id: 1,\n        title: \"Migrate Resume to Angular\",\n        completed: false\n      },\n      {\n        id: 2,\n        title: \"Migrate Projects to Angular\",\n        completed: false\n      },\n      {\n        id: 3,\n        title: \"Create the text to json component\",\n        completed: false\n      }\n    ];\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}